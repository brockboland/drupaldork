<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xml:base="http://drupaldork.com"  xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel>
 <title>Drupal Dork - Contrib Modules</title>
 <link>http://drupaldork.com/category/category/contrib-modules</link>
 <description></description>
 <language>en</language>
<item>
 <title>DOPE #2: Node Subpages</title>
 <link>http://drupaldork.com/2012/01/dope-2-node-subpages</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;Today was my second Day of Personal Enrichment at &lt;a href=&quot;http://www.jacksonriver.com/&quot;&gt;Jackson River&lt;/a&gt;. DOPE days are sort of like Google&#039;s 20% time, where employees are encouraged to work on projects that interest them. We don&#039;t have the luxury of doing it one day a week, but we do spend a solid day on these projects when we can fit it in the schedule. I wrote about &lt;a href=&quot;/2011/05/dope-1-simplenews-threaded-send&quot;&gt;the first one back in May, when I did some work on the Simplenews Threaded Send&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;This time around, I spent the day upgrading the &lt;a href=&quot;http://drupal.org/project/node_subpages&quot;&gt;Node Subpages&lt;/a&gt; module for Drupal 7. I originally wrote this module for a client, and this past weekend I released a 6.x version (&lt;a href=&quot;/module_release/node_subpages/6.x-1.0-beta1&quot;&gt;read the release announcement here&lt;/a&gt;). The short explanation is that this module allows admins to define subpages that should be available on every node of a given content type. These subpages can display either a text field from the node, or a View. This can be seen in action on &lt;a href=&quot;http://www.drugpolicy.org/issues/medical-marijuana&quot;&gt;the Drug Policy Alliance site&lt;/a&gt;: Issue nodes like that one have subpages such as Our Priorities, Resources, and Activist Toolkit. You can read more about the module functionality on &lt;a href=&quot;http://drupal.org/project/node_subpages&quot;&gt;the project page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks to the &lt;a href=&quot;http://drupal.org/project/coder&quot;&gt;Coder Upgrade&lt;/a&gt; module, I had the basic functionality upgraded pretty quickly. The rest of the day was spent adding features and fixing little things that needed cleaning up. It now allows you to re-order subpages once they are created and displays all values for fields that allow multiple values (it was originally developed to display only the first value, since that was all we needed at the time). The re-ordering turned out to be a real pain in the butt. The documentation for &lt;code&gt;&lt;a href=&quot;http://api.drupal.org/api/drupal/includes--common.inc/function/drupal_add_tabledrag/7&quot;&gt;drupal_add_tabledrag()&lt;/a&gt;&lt;/code&gt; wasn&#039;t real easy to follow, but I was able to figure it out by comparing my code to &lt;code&gt;&lt;a href=&quot;http://api.drupal.org/api/drupal/modules--filter--filter.admin.inc/function/theme_filter_admin_format_filter_order/7&quot;&gt;theme_filter_admin_format_filter_order()&lt;/a&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://drupal.org/node/1396950&quot;&gt;7.x-1.0-alpha1&lt;/a&gt; is now available on the project page. It&#039;s in alpha for now only because this version has only been run on my local dev environment, and I&#039;d like to get a few more eyes on it before tagging a stable release. Give it a spin and let me know what you think!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
 <pubDate>Sat, 07 Jan 2012 01:38:53 +0000</pubDate>
 <dc:creator>Brock</dc:creator>
 <guid isPermaLink="false">36 at http://drupaldork.com</guid>
 <comments>http://drupaldork.com/2012/01/dope-2-node-subpages#comments</comments>
</item>
<item>
 <title>New Module: Page Not Found Reports</title>
 <link>http://drupaldork.com/2011/06/new-module-page-not-found-reports</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; &lt;a href=&quot;http://drupal.org/project/pagenotfound_reports&quot;&gt;Page Not Found Reports&lt;/a&gt; module released.&lt;/p&gt;
&lt;p&gt;A couple weeks ago, I launched a client site that was dealing with a lot of 404 errors. This put unnecessary load on the server: &lt;a href=&quot;http://drupal.org/project/boost&quot;&gt;Boost&lt;/a&gt; will serve up cached versions of most pages, but for paths that haven&#039;t been cached yet, Drupal needs to process it and determine if there&#039;s a page available to serve up. In this case, the client overlooked a couple directories of images and other static files that should have been migrated from their old site, so they were getting a lot of 404s from off-site uses of those images. Some were other sites that were hot-linking to the client&#039;s images (impolite, but not verboten), but others were being used in their own mailing lists and other sites that they maintained.&lt;/p&gt;
&lt;p&gt;To make it easier to identify what files and pages may have missed out on the migration, I built &lt;a href=&quot;http://drupal.org/project/pagenotfound_reports&quot;&gt;Page Not Found Reports&lt;/a&gt;. This adds three new reports:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Most Common:&lt;/strong&gt; Similar to Drupal&#039;s &lt;em&gt;Top &#039;page not found&#039; errors&lt;/em&gt; report (at &lt;code&gt;admin/reports/page-not-found&lt;/code&gt;), but includes some extra stats about the number and frequency of 404 errors.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Referers:&lt;/strong&gt; Lists the most common missing paths, along with the URL of the page that was requesting it. In my case, this report helped the client identify which of their other sites were trying to use images that had been moved.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;All 404s:&lt;/strong&gt; A list of each 404 error, the time it occurred, and the referring URL.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;There are other features I want to add. In particular, I want to add filtering by path and time range. I&#039;ll also add CSV exports at some point, and I&#039;m open to more feature requests in the issue queue. And of course, I need to port it to Drupal 7 sooner rather than later.&lt;/p&gt;
&lt;p&gt;Here&#039;s a screenshot of the Referers report, with some client URLs blocked out (click for large):&lt;br /&gt;&lt;a class=&quot;colorbox-load&quot; href=&quot;/sites/drupaldork.com/files/screenshots/404_Reports-20110622-082755.png&quot;&gt;&lt;br /&gt;&lt;img src=&quot;/sites/drupaldork.com/files/styles/large/public/screenshots/404_Reports-20110622-082755.png&quot; alt=&quot;Page Not Founds Reports screenshot&quot; /&gt;&lt;br /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
 <pubDate>Wed, 22 Jun 2011 12:44:18 +0000</pubDate>
 <dc:creator>Brock</dc:creator>
 <guid isPermaLink="false">22 at http://drupaldork.com</guid>
 <comments>http://drupaldork.com/2011/06/new-module-page-not-found-reports#comments</comments>
</item>
<item>
 <title>DOPE #1: Simplenews Threaded Send</title>
 <link>http://drupaldork.com/2011/05/dope-1-simplenews-threaded-send</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;strong&gt;tl;dr: I release &lt;a href=&quot;http://drupal.org/project/simplenews_threaded_send&quot;&gt;Simplenews Threaded Send&lt;/a&gt; this weekend.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let me start by saying that I love working for &lt;a href=&quot;http://www.jacksonriver.com/&quot;&gt;Jackson River&lt;/a&gt;. About a month ago, management anounced that we would be trying out a monthly Day of Personal Enrichment, not unlike Google&#039;s 20% time, but more realistic - who can afford to spend a day a week goofing around? We&#039;ve staggered them so that the whole company doesn&#039;t shut down for a day at a time, so my first DOPE was this past Friday and I wrapped up my project over the weekend.&lt;/p&gt;
&lt;p&gt;First, a little back story. Last year, we rebuilt the site of a member of the US House of Representatives. One of their larger requirments was to implement a mass-mailer that could be used to send daily updates to other party members and constituents - several thousand emails per day, in total. They had several SMTP servers that had been sending these mailings for some time, so we were able to continue using them without worrying about getting blacklisted as spammers by mail services. We decided to use the &lt;a href=&quot;http://drupal.org/project/simplenews&quot;&gt;Simplenews&lt;/a&gt; and &lt;a href=&quot;http://drupal.org/project/smtp&quot;&gt;SMTP Authentication Support&lt;/a&gt; modules to meet this requirement, but had to work around a few limitations:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
		Simlpenews sends messags during cron, one message at a time.&lt;/li&gt;
&lt;li&gt;
		Drupal sets a semaphore variable during a cron run to ensure that only one cron process can be running at once.&lt;/li&gt;
&lt;li&gt;
		Simplenews relied on this assumption, and did nothing to mark the batch of messages that were in progress.&lt;/li&gt;
&lt;li&gt;
		A bug in &lt;a href=&quot;http://drupal.org/project/poormanscron&quot;&gt;Poormanscron&lt;/a&gt; exposed this problem in Simplenews: when two cron processes were allowed to run at once, &lt;a href=&quot;http://drupal.org/node/361071&quot;&gt;multiple copies of the messages were sent&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
		The SMTP Authentication Support module only handled a single SMTP server.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;
	Customizations&lt;/h2&gt;
&lt;p&gt;
	To get around these limitations and assumptions, I did the following:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
		Wrote a Multi SMTP module that allows multiple servers to be configured. It sits on top of the existing SMTP module, and just sets variables used by that module to determine which server to send mail to.&lt;/li&gt;
&lt;li&gt;
		Wrote a Simplenews Threaded Send module that would start a new thread for each SMTP server. Each of these child processes would send a single batch of messages to one SMTP server.&lt;/li&gt;
&lt;li&gt;
		Made some modifications to the Simplenews module to set a flag on messages that were in the process of being sent, to prevent duplicates.&lt;/li&gt;
&lt;li&gt;
		Implemented other modules for some custom functionality: global unsubscribe, creating a user record for newsletter subscribers (Simplenews doesn&#039;t require a record in the users table), etc.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
	After ironing out the kinks, this solution has been working great for the client for several months. They&#039;ve been really happy, and after showing it off, told us that other offices in the House were interested in making use of it.&lt;/p&gt;
&lt;h2&gt;
	DOPE project, and how it works&lt;/h2&gt;
&lt;p&gt;
	Which brings us, finally, to my DOPE project: refactoring Simplenews Threaded Send for public release. Don&#039;t Hack Contrib is only one step below Don&#039;t Hack Core, so I wanted to find a way to wrap the changes I had made to Simplenews into my module so that it could be installed and used without any hacks, like requiring patches to Simplenews.&lt;/p&gt;
&lt;p&gt;
	I had started this process months ago on my own time, but was never able to make time to wrap it up, so it was the perfect project for a DOPE. I spent Friday and part of this weekend moving Simplenews customizations into Simplenews Threaded Send, ripping out the functionality specific to the client, and testing the hell out of it.&lt;/p&gt;
&lt;p&gt;
	At the core, this module is based on socket connections. A Thread class (written by a former co-worker) adds pseudo-threading by opening new connections to the server. For each SMTP server that&#039;s avaialable, the module will create a Thread object. When &lt;code&gt;start()&lt;/code&gt; is called on the object, it opens a socket connection back to the same server, to a URL defined by this module with a callback that will send a batch of email. The Thread object writes the request headers to the socket and then returns, so that the module can continue processing without waiting for the response (which takes several seconds, since the &quot;child&quot; process is sending a batch of email). This way, multiple threads can be processing in parallel…sort of.&lt;/p&gt;
&lt;p&gt;
	At half-second intervals, each thread is polled to see if the response has fully loaded. If it has, the Thread object is re-used to open another connection, until the whole message queue has been sent. This will work around slow SMTP servers: while the thread that&#039;s sending on the slow server waits for the batch to finish, the other threads may be able to send two or three batches. A slow server won&#039;t hold up the whole process.&lt;/p&gt;
&lt;p&gt;
	If an SMTP server fails to send, it will be marked as &quot;inactive&quot; for four hours. This was added to prevent the module from trying over and over to use a server that&#039;s not available: occasionally, an SMTP server would get overloaded, restarted by someone else, or otherwise become unavailable for a time, so we just gave it a cooling period before attempting to use it again. Any messages that had been &quot;claimed&quot; by the thread for that server will be freed up after an hour, so that another server can process them during a later cron run.&lt;/p&gt;
&lt;h2&gt;
	Updates and Cleanup&lt;/h2&gt;
&lt;p&gt;
	Cleaning this up for release required several changes:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
		Removed the cURL fallback method. Early on, we had some issues with SELinux on the server blocking socket connections, and had to use cURL to make the queries as a fallback method. But, I couldn&#039;t find a way to open a cURL connection and let processing continue without completing the response. I could open connections on multiple servers at one time, but had to wait for all of them to finish before sending another round of batches through. This meant that the faster servers would sit idle while a slow server was finishing its batch. Thankfully, the SELinux configuration was fixed, so this method was only in use for a little while. I didn&#039;t even want to include it in the released module, so I pulled it all out.&lt;/li&gt;
&lt;li&gt;
		Moved Simplenews customizations into Simplenews Threaded Send. This meant copying some functions from Simplenews into the module to be renamed and modified slightly. For example &lt;code&gt;simplenews_threaded_send_get_spool()&lt;/code&gt; is a copy of &lt;code&gt;simplenews_get_spool()&lt;/code&gt;, but it marks the messages that are in process to prevent two threads from processing the same batch.&lt;/li&gt;
&lt;li&gt;
		Replaced a hacky &lt;code&gt;$send_full_spool&lt;/code&gt; bool flag with a proper &lt;code&gt;$batch_size&lt;/code&gt; int argument. Before starting the full send process, the module will send one message on each SMTP server. This will cause unavailable servers to be marked as inactive for the next four hours, so that it won&#039;t waste time trying to process an entire batch against a server that&#039;s just timing out. This argument never really made sense, especially because it would cause the &lt;code&gt;simplenews_throttle&lt;/code&gt; variable to be set to 1 for one run, then re-set to what it was before - very hacky. The new &lt;code&gt;$batch_size&lt;/code&gt; argument gets passed down the processing stack, which makes it easier to override later on for other reasons.&lt;/li&gt;
&lt;li&gt;
		Implemented &lt;code&gt;hook_schema_alter()&lt;/code&gt; to handle new columns needed in &lt;code&gt;simplenews_mail_spool&lt;/code&gt; table. Previously, these changes were just made right in the Simplenews module.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
	While I was at it, I also updated the Multi SMTP module to give more helpful messages to admins, and to add a check for the necessary &lt;a href=&quot;http://phpmailer.worxware.com/&quot;&gt;PHPMailer&lt;/a&gt; library used by the SMTP Authentication Support module. These modules can be found here:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
		&lt;a href=&quot;http://drupal.org/project/simplenews_threaded_send&quot;&gt;Simplenews Threaded Send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
		&lt;a href=&quot;http://drupal.org/project/multi_smtp&quot;&gt;Multi SMTP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;
	Release Plan&lt;/h2&gt;
&lt;p&gt;
	The version of Simplenews Threaded Send that&#039;s available on drupal.org right now is marked as 6.x-1.0-beta2. While the client has been using the module successfully for a number of months, so much refactoring was done that I would like for it to get some more testing in the wild before I make a point release.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
 <pubDate>Sun, 01 May 2011 17:39:58 +0000</pubDate>
 <dc:creator>Brock</dc:creator>
 <guid isPermaLink="false">20 at http://drupaldork.com</guid>
 <comments>http://drupaldork.com/2011/05/dope-1-simplenews-threaded-send#comments</comments>
</item>
<item>
 <title>Display Suite in Drupal 7</title>
 <link>http://drupaldork.com/2011/04/display-suite-drupal-7</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;
    &lt;a href=&quot;http://drupal.org/project/ds&quot;&gt;Display Suite&lt;/a&gt; for Drupal 7 included a lot of updates. The big ones are the inclusion of the previously-separate &lt;a href=&quot;http://drupal.org/project/nd&quot;&gt;Node Displays&lt;/a&gt; and &lt;a href=&quot;http://drupal.org/project/vd&quot;&gt;Views Displays&lt;/a&gt; modules, and support for more region layouts (the D6 version had a single pre-defined layout).&lt;/p&gt;
&lt;p&gt;
    The feature that&#039;s making my life easy today, though, is a little thing: positioning the node post date separately from the node author. This was an option in D6 too, and I knew the module could still do it, but could not for the life of me figure out how. On the Manage Dislpay tab for my content type, my only options were the node body and taxonomy fields.&lt;/p&gt;
&lt;p&gt;
    So, for your reference and mine: Display Suite fields only become available once you choose a layout under &quot;Layout for [node type] in default&quot; on the Manage Display tab.&lt;/p&gt;
&lt;p&gt;
    I have a feeling I&#039;ll forget this step in the future, but hopefully I&#039;ll remember to look here for the solution!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
 <pubDate>Tue, 19 Apr 2011 01:18:42 +0000</pubDate>
 <dc:creator>Brock</dc:creator>
 <guid isPermaLink="false">18 at http://drupaldork.com</guid>
</item>
<item>
 <title>Webform A/B Testing Module Released</title>
 <link>http://drupaldork.com/2011/03/webform-ab-testing-module-released</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;The &lt;a href=&quot;http://drupal.org/project/webform_ab&quot;&gt;Webform A/B Testing&lt;/a&gt; module that I built recently is now available in the contrib repository. This one is better documented than my first contrib module, &lt;a href=&quot;http://drupal.org/project/multi_smtp&quot;&gt;Multi SMTP&lt;/a&gt;, and is likely to have wider appeal. It adds a new content type for A/B tests of webforms, so that a site administrator can test a couple webforms against each other to determine which version results in the best conversion rate.&lt;/p&gt;
&lt;p&gt;Development of both of these modules was supported by my employer, &lt;a href=&quot;http://www.jacksonriver.com/&quot;&gt;Jackson River&lt;/a&gt;. We have several more modules that we have been using internally for months and will be adding to the contrib repository soon; for the time being, they are available &lt;a href=&quot;http://www.jacksonriver.com/jackson-river-drupal-modules&quot;&gt;from our website&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
 <pubDate>Sat, 05 Mar 2011 05:35:00 +0000</pubDate>
 <dc:creator>Brock</dc:creator>
 <guid isPermaLink="false">14 at http://drupaldork.com</guid>
</item>
<item>
 <title>Multi SMTP</title>
 <link>http://drupaldork.com/2011/02/multi-smtp</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;My first contributed module has its first release:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://drupal.org/project/multi_smtp&quot;&gt;http://drupal.org/project/multi_smtp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hurrah!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
 <pubDate>Sun, 20 Feb 2011 18:59:29 +0000</pubDate>
 <dc:creator>Brock</dc:creator>
 <guid isPermaLink="false">13 at http://drupaldork.com</guid>
</item>
<item>
 <title>Adding A Field Formatter to Display Suite</title>
 <link>http://drupaldork.com/content/adding-field-formatter-display-suite</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;(Originally posted on &lt;a href=&quot;http://www.brockboland.com/2010/08/adding-field-formatter-display-suite&quot;&gt;BrockBoland.com&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;On one of my current projects, I&#039;m using &lt;a href=&quot;http://drupal.org/project/ds&quot;&gt;Display Suite&lt;/a&gt; to layout various node displays. This is only the second time I&#039;ve used DS and I haven&#039;t needed to get too deep into it, but so far, I&#039;m finding it to be a lot quicker than coding different versions of &lt;code&gt;node.tpl.php&lt;/code&gt; - and it allows the site admins who will maintain the site to modify things without getting into the code, something I &lt;a href=&quot;http://www.brockboland.com/2010/07/coded-vs-configurable-and-too-many-options&quot;&gt;talked about last week&lt;/a&gt;. &lt;a href=&quot;http://drupal.org/project/panels&quot;&gt;Panels&lt;/a&gt; is another very popular option for things like this, but the one time I used it, I wasn&#039;t too impressed; for whatever reason, it just didn&#039;t click for me.&lt;/p&gt;
&lt;p&gt;But anyway: we&#039;re talking Display Suite, not Panels. Without getting into it too much, Display Suite gives admins a simple, drag-and-drop interface to place fields into different regions of the output. When I say &quot;regions,&quot; I&#039;m talking simple: header and footer, with the center section part broken into left, right, and middle. I&#039;ve run into a few cases already where this limited set of regions hasn&#039;t been enough for me, but if there&#039;s a good way to define more regions without hacking the module, I haven&#039;t found it yet. Even so, this module has allowed me to quickly throw together some common layouts without having to write much CSS. It&#039;s been espeically helpful on my own site: I don&#039;t have any design I&#039;m working toward, and Display Suite makes the layout look good enough for me. This isn&#039;t usualy the case on client sites, but it&#039;s still been helpful.&lt;/p&gt;
&lt;p&gt;This week, I was working on the landing page for a client&#039;s site. The page shows a brief highlight of some of the latest blog posts: just the title, category, and post date, with a thumbnail image on the left. They wanted to show the category name followed by &quot;Blog »&quot;, above the title of the post. I used the &lt;a href=&quot;http://drupal.org/project/nd&quot;&gt;Node Displays&lt;/a&gt; module to add a new build mode for blog posts on the landing page, and added the thumbnail image, blog category, title, and post date fields into the left and right regions. I did have to tweak the CSS just a little bit to make the left and right regions the correct width (and eliminate the middle region), but it was pretty simple. Here&#039;s an example of the final result:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.brockboland.com/sites/brockboland.com/files/screenshots/Heal_the_Bay-20100801-123808.jpg&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;http://www.flickr.com/photos/weesen/3255908138/&quot;&gt;Fish image source&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;In this case, the category is &quot;Aquarium,&quot; so it says &quot;Aquarium Blog »&quot; above the post. This links to the taxonomy term page for the Aquarium term. The Node Displays module comes with several formatters for taxonomy terms - terms separated by space or comma, linked or not - but not for my specific need. Thankfully, Display Suite offers &lt;code&gt;hook_ds_fields_alter()&lt;/code&gt;, which allows a module developer to modify the fields made available by other modules. In this case, I wanted to modify the taxonomy term fields made available by the Node Displays module. I had to use &lt;code&gt;dpm()&lt;/code&gt; from the &lt;a href=&quot;http://drupal.org/project/devel&quot;&gt;Devel&lt;/a&gt; module (as always, a lifesaver) to figure out what values were available where, so I knew what to change and how.&lt;/p&gt;
&lt;p&gt;Ultimately, I wrote three functions in my module:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Implemented &lt;code&gt;hook_ds_fields_alter()&lt;/code&gt; to add my formatter to the list of formatters available for the Blog Category taxonomy term field.&lt;/li&gt;
&lt;li&gt;Implemted &lt;code&gt;hook_theme()&lt;/code&gt; to register the theme function that would modify the value of the taxonomy term for ouput.&lt;/li&gt;
&lt;li&gt;The theme function that actually modified the taxonomy term&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;codeblock&quot;&gt;
define(&#039;BLOG_CATEGORY_VOCAB_ID&#039;, 1);

/**
 * Implementation of hook_ds_fields_alter(), from the Display Suite module
 * Add another formatter to the Blog Category taxonomy term field
 */
function mymodule_ds_fields_alter(&amp;amp;$fields) {
  // For this site, I only wanted this formatter to be available for the Blog Category vocabulary (term_1, 
  // in this case). I could have made it available for all vocabularies by making this a look and adding 
  // the formatter for all of them
  $fields[&#039;terms_&#039; . BLOG_CATEGORY_VOCAB_ID][&#039;properties&#039;][&#039;formatters&#039;][&#039;mymodule_blog_category&#039;] = &#039;Front Page category&#039;;
}


/**
 * Implementation of hook_theme().
 * Register the theme formatter as a theme function
 */
function mymodule_theme() {
  return array(&#039;mymodule_blog_category&#039; =&amp;gt; array(&#039;function&#039; =&amp;gt; &#039;mymodule_blog_category&#039;, &#039;arguments&#039; =&amp;gt; array(&#039;node&#039; =&amp;gt; null)));
}


/**
 * Format the given field. $field includes an &#039;object&#039; index that contains the current node
 */
function mymodule_blog_category($field) {
  $content = &#039;&#039;;

  // Only continue if the node has taxonomy terms applied
  if (isset($field[&#039;object&#039;]-&amp;gt;taxonomy) &amp;amp;&amp;amp; !empty($field[&#039;object&#039;]-&amp;gt;taxonomy)) {
    // Determine the vocab ID for this field (not really necessary here, since this module 
    // is only intended to be used with BLOG_CATEGORY_VOCAB_ID)
	// $field[&#039;key&#039;] will have a value like terms_1 or terms_4, so this pulls the number off the end
    $vid = end(explode(&#039;_&#039;, $field[&#039;key&#039;]));

    // Since terms are not grouped by vocabulary, we need to loop over all of them and find the one(s) 
    // for the vocab in question
    foreach ($field[&#039;object&#039;]-&amp;gt;taxonomy as $tid =&amp;gt; $term) {
      if ($term-&amp;gt;vid == $vid) {
        // Add &quot;Blog »&quot; to the term, and link to the term page
        $content = l($term-&amp;gt;name . &#039; Blog »&#039;, &#039;taxonomy/term/&#039;. $term-&amp;gt;tid);
        // There could conceivably be more than one term for this vocabulary, but there isn&#039;t under 
        // the current site config, and we only want to display a single term under this format anyway
        break;
      }
    }
  }
  return $content;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
 <pubDate>Sun, 01 Aug 2010 17:08:43 +0000</pubDate>
 <dc:creator>Brock</dc:creator>
 <guid isPermaLink="false">4 at http://drupaldork.com</guid>
 <comments>http://drupaldork.com/content/adding-field-formatter-display-suite#comments</comments>
</item>
</channel>
</rss>
